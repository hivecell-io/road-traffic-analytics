## influxdb image version
## ref: https://hub.docker.com/r/library/influxdb/tags/
image:
  repository: "eu.gcr.io/hivecell/helm-demo/influxdb"
  tag: "1.8"
  pullPolicy: IfNotPresent

serviceAccount:
  create: true
  name:
  annotations: {}

readinessProbe:
  enabled: true
  initialDelaySeconds: 40
  periodSeconds: 7

securityContext: {}
  # runAsUser: 999
  # runAsGroup: 999

startupProbe:
  enabled: false
  # path: "/ping"
  # failureThreshold: 6
  # periodSeconds: 5
  # scheme: HTTP

## Specify a service type
## NodePort is default
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  ## Add annotations to service
  # annotations: {}
  type: ClusterIP
  # externalIPs: []
  # externalTrafficPolicy: ""

## Persist data to a persistent volume
##
persistence:
  enabled: true
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  storageClass: "ceph-rbd"
  annotations:
  accessMode: ReadWriteOnce
  size: 8Gi

# persistence:
#   enabled: true
#   ## If set to "-", storageClassName: "", which disables dynamic provisioning
#   storageClass: "rook-cephfs"
#   annotations:
#   accessMode: ReadWriteOnce
#   size: 8Gi

## Create default user through Kubernetes job
## Defaults indicated below
##
setDefaultUser:
  enabled: false

  ## Image of the container used for job
  ## Default: appropriate/curl:latest
  ##
  image: appropriate/curl:latest

  ## Deadline for job so it does not retry forever.
  ## Default: activeDeadline: 300
  ##
  activeDeadline: 300

  ## Specify the number of retries before considering job as failed.
  ## https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#pod-backoff-failure-policy
  ##
  backoffLimit: 6

  ## Hook delete policy for helm.
  ## Default: hookDeletePolicy: hook-succeeded
  ##
  hookDeletePolicy: hook-succeeded

  ## Restart policy for job
  ## Default: OnFailure
  restartPolicy: OnFailure

  user:

    ## The user name
    ## Default: "admin"
    username: "admin"

    ## User password
    ## single quotes must be escaped (\')
    ## Default: (Randomly generated 10 characters of AlphaNum)
    # password:

    ## The user name and password are obtained from an existing secret. The expected
    ## keys are `influxdb-user` and `influxdb-password`.
    ## If set, the username and password values above are ignored.
    # existingSecret: influxdb-auth

    ## User privileges
    ## Default: "WITH ALL PRIVILEGES"
    privileges: "WITH ALL PRIVILEGES"

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources: {}
#  requests:
#    memory: 256Mi
#    cpu: 0.1
#  limits:
#    memory: 16Gi
#    cpu: 8

# Annotations to be added to InfluxDB pods
podAnnotations: {}

# Labels to be added to InfluxDB pods
podLabels: {}


## Additional containers to be added to the pod.
extraContainers: {}
#  - name: my-sidecar
#    image: nginx:latest

## Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
# schedulerName:

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
# - key: "key"
#   operator: "Equal|Exists"
#   value: "value"
#   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

## The InfluxDB image uses several environment variables to automatically
## configure certain parts of the server.
## Ref: https://hub.docker.com/_/influxdb/
env: {}
  # - name: INFLUXDB_DB
  #   value: "demo"

## The name of a secret in the same kubernetes namespace which contain values
## to be added to the environment.
## This can be used, for example, to set the INFLUXDB_HTTP_SHARED_SECRET
## environment variable.
envFromSecret: {}

## InfluxDB configuration
## ref: https://docs.influxdata.com/influxdb/v1.7/administration/config
config:
  reporting_disabled: false
  rpc: {}
  meta: {}
  data: {}
  coordinator: {}
  retention: {}
  shard_precreation: {}
  monitor: {}
  http: {}
  logging: {}
  subscriber: {}
  graphite: {}
  collectd: {}
  opentsdb: {}
  udp: {}
  continuous_queries: {}
  tls: {}

# Allow executing custom init scripts
#
# If the container finds any files with the extensions .sh or .iql inside of the
# /docker-entrypoint-initdb.d folder, it will execute them. The order they are
# executed in is determined by the shell. This is usually alphabetical order.
initScripts:
  enabled: true
  scripts:
    init.iql: |+
      CREATE DATABASE "grafana" WITH DURATION 30d REPLICATION 1 NAME "rp_30d"

  persistence:
    enabled: false
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    annotations:
    accessMode: ReadWriteOnce
    size: 8Gi
  schedule: "0 0 * * *"
  startingDeadlineSeconds: ""
  annotations: {}
  podAnnotations: {}



